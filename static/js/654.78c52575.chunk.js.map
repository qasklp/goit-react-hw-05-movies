{"version":3,"file":"static/js/654.78c52575.chunk.js","mappings":"sPAqBA,EAlBkB,SAAC,GAAc,IACvBA,EADsB,EAAXC,KACKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC3CC,EAAU,yCAAqCF,GACrD,OAAO,2BACDA,IAAgB,gBAAKG,IAAKD,EAAYE,IAAI,QAAQC,MAAM,WAC1D,wBAAKN,KACL,uBAAIE,MAHQH,EAKnB,IACD,OAAO,wBACFH,GAER,E,SCeD,EAtBa,WACT,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,gHAEWC,EAAAA,EAAAA,IAAQN,GAFnB,gBAEHV,EAFG,EAEHA,KACPa,EAAQb,GAHE,gDAMViB,MAAM,KAAMC,SANF,yDAAH,qDAUfH,GACH,GAAE,CAACL,KAGG,SAAC,EAAD,CAAWV,KAAMA,GAC3B,C,sLC1BKmB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAa,mCAAG,sGACFL,EAASM,IAAT,sBADE,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKbC,EAAe,mCAAG,WAAOzB,GAAP,yFACJiB,EAASM,IAAT,gBAAsBvB,IADlB,uBACnBwB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfE,EAAY,mCAAG,WAAOC,GAAP,yFACDV,EAASM,IAAT,eAA6B,CAChDH,OAAQ,CACJO,MAAAA,KAHgB,uBAChBH,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASZV,EAAO,mCAAG,WAAOd,GAAP,yFACIiB,EAASM,IAAT,gBAAsBvB,EAAtB,aADJ,uBACXwB,EADW,EACXA,KADW,kBAEZA,GAFY,2CAAH,sDAKPI,EAAU,mCAAG,WAAO5B,GAAP,yFACCiB,EAASM,IAAT,gBAAsBvB,EAAtB,aADD,uBACdwB,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qD","sources":["components/modules/ActorList/ActorList.jsx","components/pages/Cast/Cast.jsx","components/shared/services/films-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n//import styles from \"./ActorList.module.css\";\n\nconst ActorList = ({ cast }) => {\n    const elements = cast.map(({ id, name, profile_path, character }) => {\n        const profileURL = `https://image.tmdb.org/t/p/w500${profile_path}`\n        return <li key={id}>\n            {!profile_path || <img src={profileURL} alt=\"actor\" width=\"100px\" />}\n            <h3>{name}</h3>\n            <p>{character}</p>\n        </li>\n    });\n    return <ul>\n        {elements}\n    </ul>;\n}\n\nActorList.propTypes = {\n    cast: PropTypes.array.isRequired,\n}\n\nexport default ActorList;","//import styles from \"./Cast.module.css\";\n\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'components/shared/services/films-api';\nimport ActorList from 'components/modules/ActorList/ActorList';\nimport { useEffect, useState } from 'react';\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                const {cast} = await getCast(movieId);\n                setCast(cast);\n            }\n            catch (error) {\n                alert(error.message);\n            }\n        }\n\n        fetchCast();\n    }, [movieId]);\n\n\n    return <ActorList cast={cast}/>;\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: \"bd3df65c58adfe1a0f9f7b7557ea4fe2\",\n    }\n})\n\nexport const trendingFilms = async () => {\n    const { data } = await instance.get(`trending/movie/day`);\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const searchMovies = async (query) => {\n    const { data } = await instance.get(`search/movie`, {\n        params: {\n            query,\n        }\n    });\n    return data;\n}\n\nexport const getCast = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data;\n}\n\nexport const getReviews = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data;\n}\n\n\n\n"],"names":["elements","cast","map","id","name","profile_path","character","profileURL","src","alt","width","movieId","useParams","useState","setCast","useEffect","fetchCast","getCast","alert","message","instance","axios","baseURL","params","api_key","trendingFilms","get","data","getMovieDetails","searchMovies","query","getReviews"],"sourceRoot":""}