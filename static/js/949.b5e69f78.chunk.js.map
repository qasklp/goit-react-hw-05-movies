{"version":3,"file":"static/js/949.b5e69f78.chunk.js","mappings":"sPAmBA,EAhBmB,SAAC,GAAiB,IAC3BA,EAD0B,EAAdC,QACOC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxC,OAAO,2BACH,qCAAaD,MACb,uBAAIC,MAFQF,EAInB,IACD,OAAO,wBACFH,GAER,E,SCgBD,EArBgB,WACZ,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,gHAEaC,EAAAA,EAAAA,IAAWN,GAFxB,gBAELO,EAFK,EAELA,QACRJ,EAAWI,GAHE,gDAMbC,MAAM,KAAMC,SANC,yDAAH,qDAUlBJ,GACH,GAAE,CAACL,IAEIL,EAAQe,OAAO,GAAI,SAAC,EAAD,CAAYf,QAASA,KAAe,mEAClE,C,sLCzBKgB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAa,mCAAG,sGACFL,EAASM,IAAT,sBADE,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKbC,EAAe,mCAAG,WAAOtB,GAAP,yFACJc,EAASM,IAAT,gBAAsBpB,IADlB,uBACnBqB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfE,EAAY,mCAAG,WAAOC,GAAP,yFACDV,EAASM,IAAT,eAA6B,CAChDH,OAAQ,CACJO,MAAAA,KAHgB,uBAChBH,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASZI,EAAO,mCAAG,WAAOzB,GAAP,yFACIc,EAASM,IAAT,gBAAsBpB,EAAtB,aADJ,uBACXqB,EADW,EACXA,KADW,kBAEZA,GAFY,2CAAH,sDAKPZ,EAAU,mCAAG,WAAOT,GAAP,yFACCc,EAASM,IAAT,gBAAsBpB,EAAtB,aADD,uBACdqB,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qD","sources":["components/modules/ReviewList/ReviewList.jsx","components/pages/Reviews/Reviews.jsx","components/shared/services/films-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n//import styles from \"./ReviewList.module.css\";\n\nconst ReviewList = ({ reviews }) => {\n    const elements = reviews.map(({ id, author, content }) => {\n        return <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n        </li>\n    });\n    return <ul>\n        {elements}\n    </ul>;\n}\n\nReviewList.propTypes = {\n    reviews: PropTypes.array.isRequired,\n}\n\nexport default ReviewList;","//import styles from \"./Reviews.module.css\";\n\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'components/shared/services/films-api';\nimport ReviewList from 'components/modules/ReviewList/ReviewList';\nimport { useEffect, useState } from 'react';\n\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const { results } = await getReviews(movieId);\n                setReviews(results);\n            }\n            catch (error) {\n                alert(error.message);\n            }\n        }\n\n        fetchReviews();\n    }, [movieId]);\n\n    return (reviews.length>0 ? <ReviewList reviews={reviews}  /> : <p>We don't have any reviews for this movie</p>);\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: \"bd3df65c58adfe1a0f9f7b7557ea4fe2\",\n    }\n})\n\nexport const trendingFilms = async () => {\n    const { data } = await instance.get(`trending/movie/day`);\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const searchMovies = async (query) => {\n    const { data } = await instance.get(`search/movie`, {\n        params: {\n            query,\n        }\n    });\n    return data;\n}\n\nexport const getCast = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data;\n}\n\nexport const getReviews = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data;\n}\n\n\n\n"],"names":["elements","reviews","map","id","author","content","movieId","useParams","useState","setReviews","useEffect","fetchReviews","getReviews","results","alert","message","length","instance","axios","baseURL","params","api_key","trendingFilms","get","data","getMovieDetails","searchMovies","query","getCast"],"sourceRoot":""}