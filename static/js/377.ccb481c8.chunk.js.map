{"version":3,"file":"static/js/377.ccb481c8.chunk.js","mappings":"oKAqBA,IAjBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAOI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC/B,OAAO,yBACH,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMR,GAAzC,SAAqDK,KADzCD,EAGnB,IACD,OAAO,wBACFF,GAER,C,6HCdD,GAAiB,E,SCmCjB,EAhCa,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACZ,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OAAO,kBAAMH,SANQ,SAAAI,GACjBA,EAAEC,iBACFL,EAAS,CAAEE,MAAAA,IACXC,EAAS,GACZ,EAEM,WACH,kBACIG,UAAWC,EAAAA,gBACXC,KAAK,QACLC,MAAOP,EACPQ,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,SAlBa,SAAAT,GACjBD,EAASC,EAAEU,OAAOL,MACrB,EAiBOM,UAAQ,KAEZ,mBAAQL,KAAK,SAAb,sBAEP,E,SC7BD,EAAyB,uBCgBzB,EAde,WACX,OAAO,gBAAKJ,UAAWC,EAAhB,UACH,SAAC,KAAD,CACIS,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,UACVC,cAAY,EACZC,cAAY,KAGvB,E,0BC8BD,EArCe,WACX,OAA0BrB,EAAAA,EAAAA,UAAS,IAAnC,eAAOsB,EAAP,KAAcC,EAAd,KACA,GAA8BvB,EAAAA,EAAAA,WAAS,GAAvC,eAAOwB,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUF,EAAaG,IAAI,UAEjCC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAW,mCAAG,sGAEhBP,GAAW,GAFK,UAGYQ,EAAAA,EAAAA,IAAaJ,GAHzB,gBAGNK,EAHM,EAGNA,QACVX,GAAS,OAAIW,IAJG,gDAOhBC,MAAM,KAAMC,SAPI,yBAUhBX,GAAW,GAVK,4EAAH,qDAaD,KAAZI,GACFG,GAEH,GAAE,CAACH,IAOF,OAAO,4BACH,SAAC,EAAD,CAAM9B,SANe,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACxB2B,EAAgB,CAAE3B,MAAAA,IAClBsB,EAAS,GACZ,IAIIC,GAAQ,SAAC,EAAD,KAAU,SAACa,EAAA,EAAD,CAAYhD,OAAQiC,MAE9C,C,sLCzCKgB,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,gCACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAa,mCAAG,sGACFL,EAASR,IAAT,sBADE,uBACjBc,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKbC,EAAe,mCAAG,WAAOnD,GAAP,yFACJ4C,EAASR,IAAT,gBAAsBpC,IADlB,uBACnBkD,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfX,EAAY,mCAAG,WAAOhC,GAAP,yFACDqC,EAASR,IAAT,eAA6B,CAChDW,OAAQ,CACJxC,MAAAA,KAHgB,uBAChB2C,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASZE,EAAO,mCAAG,WAAOpD,GAAP,yFACI4C,EAASR,IAAT,gBAAsBpC,EAAtB,aADJ,uBACXkD,EADW,EACXA,KADW,kBAEZA,GAFY,2CAAH,sDAKPG,EAAU,mCAAG,WAAOrD,GAAP,yFACC4C,EAASR,IAAT,gBAAsBpC,EAAtB,aADD,uBACdkD,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qD","sources":["components/modules/MoviesList/MoviesList.jsx","components/modules/Form/Form.module.css","components/modules/Form/Form.jsx","webpack://goit-react-hw-05-movies/./src/components/modules/Loader/Loader.module.css?b4dc","components/modules/Loader/Loader.jsx","components/pages/Movies/Movies.jsx","components/shared/services/films-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n//import styles from \"./MoviesList.module.css\";\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    const elements = movies.map(({ id, title }) => {\n        return <li key={id}>\n            <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n        </li>\n    });\n    return <ul>\n        {elements}\n    </ul>;\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired,\n}\n\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport styles from './Form.module.css'\n\nconst Form = ({ onSubmit }) => {\n    const [query, setQuery] = useState('');\n\n    const handleChange = e => {\n        setQuery(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ query });\n        setQuery('');\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <input\n            className={styles.SearchFormInput}\n            name=\"query\"\n            value={query}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            onChange={handleChange}\n            required\n        />\n        <button type=\"submit\">Search</button>\n    </form>;\n}\n\nForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Form;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__6Elqx\"};","import { Audio } from 'react-loader-spinner';\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => {\n    return <div className={styles.loader}>\n        <Audio\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"blue\"\n            ariaLabel=\"loading\"\n            wrapperStyle\n            wrapperClass\n        />\n    </div>;\n}\n\nexport default Loader;","//import styles from \"./Movies.module.css\";\nimport Form from 'components/modules/Form/Form';\nimport Loader from 'components/modules/Loader/Loader';\nimport MoviesList from 'components/modules/MoviesList/MoviesList';\nimport { searchMovies } from 'components/shared/services/films-api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n    const [films, setFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const request = searchParams.get(\"query\");\n\n    useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n          const { results } = await searchMovies(request);\n        setFilms([...results]);\n      }\n      catch (error) {\n        alert(error.message);\n      }\n      finally {\n        setLoading(false);\n      }\n    }\n    if (request !== '') {\n      fetchMovies();\n    }\n  }, [request]);\n\n    const setSearchRequest = ({ query }) => {\n        setSearchParams({ query });\n        setFilms([]);\n    }\n\n    return <div>\n        <Form onSubmit={setSearchRequest}/>\n        {loading?<Loader/>:<MoviesList movies={films} />}\n    </div>;\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: \"bd3df65c58adfe1a0f9f7b7557ea4fe2\",\n    }\n})\n\nexport const trendingFilms = async () => {\n    const { data } = await instance.get(`trending/movie/day`);\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const { data } = await instance.get(`movie/${id}`);\n    return data;\n}\n\nexport const searchMovies = async (query) => {\n    const { data } = await instance.get(`search/movie`, {\n        params: {\n            query,\n        }\n    });\n    return data;\n}\n\nexport const getCast = async (id) => {\n    const { data } = await instance.get(`movie/${id}/credits`);\n    return data;\n}\n\nexport const getReviews = async (id) => {\n    const { data } = await instance.get(`movie/${id}/reviews`);\n    return data;\n}\n\n\n\n"],"names":["movies","location","useLocation","elements","map","id","title","to","state","from","onSubmit","useState","query","setQuery","e","preventDefault","className","styles","name","value","type","autoComplete","autoFocus","onChange","target","required","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","films","setFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","request","get","useEffect","fetchMovies","searchMovies","results","alert","message","MoviesList","instance","axios","baseURL","params","api_key","trendingFilms","data","getMovieDetails","getCast","getReviews"],"sourceRoot":""}